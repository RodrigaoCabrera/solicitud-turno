<form method="post" action="/api/appointments">
  <!--  TODO: Create componente for each form type -->
  <h3>Datos del Paciente</h3>
  <div>
    <label for="patientFirstName">Nombre:</label>
    <input type="text" id="patientFirstName" name="patientFirstName" required />
  </div>
  <div>
    <label for="patientLastName">Apellido:</label>
    <input type="text" id="patientLastName" name="patientLastName" required />
  </div>
  <div>
    <label for="patientDni">DNI:</label>
    <input type="text" id="patientDni" name="patientDni" />
  </div>

  <div>
    <label for="healthInsurance">Seguro Médico (si aplica):</label>
    <input type="text" id="healthInsurance" name="healthInsurance" />
  </div>

  <div>
    <label for="isNewPatient">Paciente Nuevo? (Si/No):</label>
    <select id="isNewPatient" name="isNewPatient" required>
      <option value="true">Si</option>
      <option value="false">No</option>
    </select>
  </div>

  <h3>Datos del Tutor</h3>
  <div>
    <label for="tutorFirstName">Nombre:</label>
    <input type="text" id="tutorFirstName" name="tutorFirstName" />
  </div>
  <div>
    <label for="tutorLastName">Apellido:</label>
    <input type="text" id="tutorLastName" name="tutorLastName" />
  </div>
  <div>
    <label for="tutorEmail">Correo Electrónico:</label>
    <input type="email" id="tutorEmail" name="tutorEmail" />
  </div>
  <div>
    <label for="tutorPhone">Teléfono:</label>
    <input type="tel" id="tutorPhone" name="tutorPhone" />
  </div>

  <section>
    <p id="errorMessage"></p>
  </section>
  <button type="submit">Enviar Solicitud</button>
</form>

<script>
  const date = localStorage.getItem("storedDate") || "";
  const professionalId = localStorage.getItem("professionalId") || "";

  // Interfaz para Tutor
  interface Tutor {
    firstName: string;
    lastName: string;
    email: string;
    phone: number;
  }

  // Interfaz para Paciente
  interface Patient {
    firstName: string;
    lastName: string;
    dni?: string; // Opcional
    isNewPatient: boolean;
    healthInsurance?: string; // Opcional
    tutorId?: string; // Opcional (relación con Tutor)
  }

  // Interfaz para Solicitud de Cita
  interface AppointmentRequest {
    date: string;
    professionalId: string;
  }

  const submitForm = async (event: Event) => {
    event.preventDefault();

    const form = event.target as HTMLFormElement;
    const formData = new FormData(form);

    // TODO: Create function to get form data
    const patient: Patient = {
      firstName: formData.get("patientFirstName") as string,
      lastName: formData.get("patientLastName") as string,
      dni: formData.get("patientDni") as string,
      isNewPatient: formData.get("isNewPatient") === "true",
      healthInsurance: formData.get("healthInsurance") as string,
    };

    const tutor: Tutor = {
      // Datos del tutor son opcionales
      firstName: (formData.get("tutorFirstName") as string) || "",
      lastName: (formData.get("tutorLastName") as string) || "",
      email: (formData.get("tutorEmail") as string) || "",
      phone: parseInt((formData.get("tutorPhone") as string) || "0"),
    };

    const appointment: AppointmentRequest = {
      date,
      professionalId,
    };

    try {
      const response = await fetch("/api/appointments", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          patient,
          tutor,
          appointment,
        }),
      });

      const data = await response.json();
      if (response.ok) {
        localStorage.removeItem("storedDate");
        localStorage.removeItem("professionalId");
        form.reset();
        window.location.href = `/appointments/${data.id}`;
      } else {
        const $errorMessage = document.querySelector(
          "#errorMessage"
        ) as HTMLElement;

        if ($errorMessage) $errorMessage.innerText = data.message;
      }
    } catch (error) {
      // TODO: handle errors
      console.log("Hubo un error al enviar la solicitud de turno.");
    }
  };

  const $form = document.querySelector("form");

  $form?.addEventListener("submit", submitForm);
</script>
