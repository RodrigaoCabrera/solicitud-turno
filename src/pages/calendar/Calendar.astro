---
import { db } from "db/db";
import { ProfessionalProfile, Availability, Appointments } from "db/schema";
import Cally from "../../components/Cally.tsx";
import { AvailabilityType } from "../../types/availability.ts";
import { AppointmentsType } from "@/types/appointments";
import { ProfessionalData } from "@/types/professionalData";
import { eq } from "drizzle-orm";
async function getData() {
  // Obtener los datos de disponibilidad
  try {
    const [professionalResponse, availabilityResponse, appointmentsResponse] =
      await Promise.all([
        db
          .select({
            id: ProfessionalProfile.id,
            firstName: ProfessionalProfile.firstName,
            lastName: ProfessionalProfile.lastName,
            sessionTime: ProfessionalProfile.sessionTime,
            address: ProfessionalProfile.address,
          })
          .from(ProfessionalProfile),
        db.select().from(Availability),
        db.select().from(Appointments).where(eq(Appointments.isActive, true)),
      ]);

    return {
      professionalData: professionalResponse[0] as ProfessionalData,
      availability: availabilityResponse as AvailabilityType[],
      appointments: appointmentsResponse as AppointmentsType[],
    };
  } catch (error) {
    console.error("Error fetching data:", error);
    return;
  }
}
const data = await getData();

if (!data) {
  return;
}

const { professionalData, availability, appointments } = data;
---

<>
  {
    professionalData && availability && appointments ? (
      <Cally
        client:only="react"
        professionalData={professionalData}
        availability={availability}
        appointments={appointments}
      />
    ) : (
      <p>Hubo un error al leer los datos.</p>
    )
  }
</>
